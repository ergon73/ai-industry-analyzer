# quick_test.py - –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å gpt-4.1

import os
from crewai import Agent, Task, Crew, Process
from dotenv import load_dotenv
from langchain_openai import ChatOpenAI

# –ó–∞–≥—Ä—É–∂–∞–µ–º API –∫–ª—é—á–∏
load_dotenv()

# –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª–∏
smart_llm = ChatOpenAI(model_name="gpt-4.1", temperature=0.1)
fast_llm = ChatOpenAI(model_name="gpt-4o-mini", temperature=0.1)

print(f"‚úÖ –ú–æ–¥–µ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: {smart_llm.model_name}")
print(f"‚úÖ –ú–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á: {fast_llm.model_name}")

# –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∞–≥–µ–Ω—Ç–æ–≤
trend_analyst = Agent(
    role='–ê–Ω–∞–ª–∏—Ç–∏–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ç—Ä–µ–Ω–¥–æ–≤',
    goal="–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –≤—ã–¥–µ–ª–∏—Ç—å 3 –∫–ª—é—á–µ–≤—ã—Ö —Ç—Ä–µ–Ω–¥–∞ –≤ –ò–ò.",
    backstory="–í—ã ‚Äî data-–∞–Ω–∞–ª–∏—Ç–∏–∫ —Å –≥–ª—É–±–æ–∫–∏–º –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º —Ä—ã–Ω–∫–∞ –ò–ò.",
    llm=smart_llm,
    verbose=True
)

critical_analyst = Agent(
    role='–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫',
    goal="–ù–∞–π—Ç–∏ —Ä–∏—Å–∫–∏ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã–≤–æ–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.",
    backstory="–í—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –≤–µ–Ω—á—É—Ä–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫.",
    llm=smart_llm,
    verbose=True
)

# –ó–∞–¥–∞—á–∏
task_analyze = Task(
    description="–í—ã–¥–µ–ª–∏ 3 –≥–ª–∞–≤–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–∞ –≤ –ò–ò –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π.",
    expected_output="–°–ø–∏—Å–æ–∫ 3 —Ç—Ä–µ–Ω–¥–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown.",
    agent=trend_analyst
)

task_critique = Task(
    description="–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞–∂–¥—ã–π —Ç—Ä–µ–Ω–¥ –∏ –Ω–∞–π–¥–∏ —Ä–∏—Å–∫–∏ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã–≤–æ–¥—ã.",
    expected_output="–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤.",
    agent=critical_analyst,
    context=[task_analyze]
)

# Crew
test_crew = Crew(
    agents=[trend_analyst, critical_analyst],
    tasks=[task_analyze, task_critique],
    process=Process.sequential,
    verbose=True
)

if __name__ == "__main__":
    try:
        print("üöÄ –¢–µ—Å—Ç–∏—Ä—É—é gpt-4.1 –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...")
        result = test_crew.kickoff()
        print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê:")
        print(result)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}") 