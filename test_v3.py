# test_v3.py - –¢–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è V3 —Å –Ω–æ–≤—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏

import os
import json
from crewai import Agent, Task, Crew, Process
from crewai_tools import ScrapeWebsiteTool
from dotenv import load_dotenv
from langchain_openai import ChatOpenAI

# –ó–∞–≥—Ä—É–∂–∞–µ–º API –∫–ª—é—á–∏
load_dotenv()

# –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª–∏
smart_llm = ChatOpenAI(model_name="gpt-4.1", temperature=0.1)
fast_llm = ChatOpenAI(model_name="gpt-4o-mini", temperature=0.1)

print(f"‚úÖ –ú–æ–¥–µ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: {smart_llm.model_name}")
print(f"‚úÖ –ú–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á: {fast_llm.model_name}")

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ V3 –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
test_articles = [
    {
        "source": "Hugging Face Blog",
        "title": "New Llama 3.1 model released with improved reasoning",
        "link": "https://example.com/1",
        "text": "Hugging Face has released Llama 3.1, a new language model with significantly improved reasoning capabilities..."
    },
    {
        "source": "Google AI Blog", 
        "title": "Gemini 2.0 introduces multimodal reasoning",
        "link": "https://example.com/2",
        "text": "Google's Gemini 2.0 model now supports advanced multimodal reasoning, combining text, images, and code..."
    },
    {
        "source": "AWS ML Blog",
        "title": "Amazon Bedrock adds Claude 3.5 Sonnet support",
        "link": "https://example.com/3", 
        "text": "AWS Bedrock now supports Claude 3.5 Sonnet, enabling enterprise customers to access Anthropic's latest model..."
    },
    {
        "source": "The Verge",
        "title": "NVIDIA announces RTX 5000 series for AI workloads",
        "link": "https://example.com/4",
        "text": "NVIDIA has unveiled the RTX 5000 series, specifically optimized for AI and machine learning workloads..."
    },
    {
        "source": "TechCrunch",
        "title": "Local AI tools like Ollama gain enterprise adoption",
        "link": "https://example.com/5",
        "text": "Local AI tools such as Ollama and LM Studio are seeing increased adoption in enterprise environments..."
    }
]

# –ê–≥–µ–Ω—Ç—ã V3 –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
deduplication_agent = Agent(
    role="–ê–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö –∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π",
    goal="–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–Ω—ã–µ —Å—é–∂–µ—Ç—ã –∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –¢–û–ü-5.",
    backstory="–í—ã ‚Äî –≥–ª–∞–≤–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞ —Å –æ—Å—Ç—Ä—ã–º –Ω—é—Ö–æ–º –Ω–∞ –≤–∞–∂–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏.",
    llm=smart_llm,
    verbose=True
)

# –ê–Ω–∞–ª–∏—Ç–∏–∫ —Ç—Ä–µ–Ω–¥–æ–≤ —Å —Ü–µ–ø–æ—á–∫–æ–π –º—ã—à–ª–µ–Ω–∏—è
trend_analyst = Agent(
    role='–ê–Ω–∞–ª–∏—Ç–∏–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ç—Ä–µ–Ω–¥–æ–≤',
    goal="""–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¢–û–ü-5 –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –≤—ã–¥–µ–ª–∏—Ç—å 3 –∫–ª—é—á–µ–≤—ã—Ö —Ç—Ä–µ–Ω–¥–∞.
    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–≤—É—Ö—ç—Ç–∞–ø–Ω—ã–π –ø–æ–¥—Ö–æ–¥: —Å–Ω–∞—á–∞–ª–∞ —á–µ—Ä–Ω–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö —Ç–µ–º, –∑–∞—Ç–µ–º —Å–∏–Ω—Ç–µ–∑ –≤ —Ç—Ä–µ–Ω–¥—ã.""",
    backstory="""–í—ã ‚Äî data-–∞–Ω–∞–ª–∏—Ç–∏–∫ —Å –≥–ª—É–±–æ–∫–∏–º –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º —Ä—ã–Ω–∫–∞ –ò–ò. –í–∞—à –ø–æ–¥—Ö–æ–¥ ‚Äî —Å–Ω–∞—á–∞–ª–∞ —Å–æ–±—Ä–∞—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ, –ø–æ—Ç–æ–º –∏—Ö –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å.""",
    llm=smart_llm,
    verbose=True
)

# –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫
critical_analyst = Agent(
    role='–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫ –∏ —Å–∫–µ–ø—Ç–∏–∫',
    goal="""–ü—Ä–æ–≤–µ—Å—Ç–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ –∏ –Ω–∞–π—Ç–∏ —Ä–∏—Å–∫–∏, –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã–≤–æ–¥—ã.""",
    backstory="""–í—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –≤–µ–Ω—á—É—Ä–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –æ—Ç–¥–µ–ª–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã –æ—Ç —à—É–º–∞.""",
    llm=smart_llm,
    verbose=True
)

# AI-–ï–í–ê–ù–ì–ï–õ–ò–°–¢ (–ù–û–í–´–ô –ü–û–î–•–û–î)
ai_evangelist = Agent(
    role='–í–µ–¥—É—â–∏–π AI-–µ–≤–∞–Ω–≥–µ–ª–∏—Å—Ç –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ–±–æ–∑—Ä–µ–≤–∞—Ç–µ–ª—å',
    goal="""–ù–∞–ø–∏—Å–∞—Ç—å —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –¥–∞–π–¥–∂–µ—Å—Ç –≤ —Å—Ç–∏–ª–µ —Ç–µ—Ö–Ω–æ–±–ª–æ–≥–∞.
    –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ñ–∞–∫—Ç—ã –≤ –∂–∏–≤–æ–π —Ä–∞—Å—Å–∫–∞–∑ –æ –±—É–¥—É—â–µ–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.""",
    backstory="""–í—ã ‚Äî –ø–æ–ø—É–ª—è—Ä–Ω—ã–π —Ç–µ—Ö–Ω–æ–±–ª–æ–≥–µ—Ä, –∏–∑–≤–µ—Å—Ç–Ω—ã–π —É–º–µ–Ω–∏–µ–º –≥–ª—É–±–æ–∫–æ —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è –≤ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö
    –∏ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –æ –Ω–∏—Ö —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤. –í–∞—à —Å—Ç–∏–ª—å ‚Äî –≥–ª—É–±–∏–Ω–∞, —Ö–∞—Ä–∏–∑–º–∞ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–ª—å–∑–∞.""",
    llm=smart_llm,
    verbose=True
)

# –ó–∞–¥–∞—á–∏ V3
task_deduplicate = Task(
    description="""–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π –∏:
    1. –ù–∞–π—Ç–∏ –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ —Å–º—ã—Å–ª—É –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è
    2. –°–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å—é–∂–µ—Ç—ã
    3. –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—é–∂–µ—Ç–∞
    4. –°–æ—Å—Ç–∞–≤–∏—Ç—å –¢–û–ü-5 –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏""",
    expected_output="–û—Ç—á–µ—Ç —Å –¢–û–ü-5 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π.",
    agent=deduplication_agent
)

# –ó–∞–¥–∞—á–∞ —Å —Ü–µ–ø–æ—á–∫–æ–π –º—ã—à–ª–µ–Ω–∏—è
task_analyze = Task(
    description="""–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¢–û–ü-5 –Ω–æ–≤–æ—Å—Ç–µ–π. –¢–≤–æ—è —Ä–∞–±–æ—Ç–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö —à–∞–≥–æ–≤:
    
    –®–∞–≥ 1: '–ß–µ—Ä–Ω–æ–≤–æ–π –∞–Ω–∞–ª–∏–∑'. –í—ã–ø–∏—à–∏ –≤—Å–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Ç–µ–º—ã, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –ø—Ä–æ–¥—É–∫—Ç—ã.
    
    –®–∞–≥ 2: '–°–∏–Ω—Ç–µ–∑ —Ç—Ä–µ–Ω–¥–æ–≤'. –ù–∞ –æ—Å–Ω–æ–≤–µ —á–µ—Ä–Ω–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å–≥—Ä—É–ø–ø–∏—Ä—É–π –ø–æ—Ö–æ–∂–∏–µ —Ç–µ–º—ã
    –∏ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π 3 –≥–ª–∞–≤–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏.""",
    expected_output="–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ 3 —Ç—Ä–µ–Ω–¥–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown.",
    agent=trend_analyst,
    context=[task_deduplicate]
)

task_critique = Task(
    description="""–ü—Ä–æ–≤–µ–¥–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ 3 —Ç—Ä–µ–Ω–¥–æ–≤. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç—å:
    1. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ü–†–Ø–ú–û –°–ï–ô–ß–ê–°?
    2. –°–∞–º—ã–π –±–æ–ª—å—à–æ–π —Ä–∏—Å–∫?
    3. –ö—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–æ–∏–≥—Ä–∞—Ç—å, –∞ –∫—Ç–æ –≤—ã–∏–≥—Ä–∞—Ç—å?""",
    expected_output="–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ —Ç—Ä–µ–Ω–¥–∞.",
    agent=critical_analyst,
    context=[task_analyze]
)

# –ó–∞–¥–∞—á–∞ AI-–µ–≤–∞–Ω–≥–µ–ª–∏—Å—Ç–∞
task_report = Task(
    description="""–°–æ–∑–¥–∞–π —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç –≤ —Å—Ç–∏–ª–µ –ø–æ–ø—É–ª—è—Ä–Ω–æ–≥–æ —Ç–µ—Ö–Ω–æ–±–ª–æ–≥–∞.
    
    1. –ù–∞—á–Ω–∏ —Å —è—Ä–∫–æ–≥–æ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
    2. –í–∫–ª—é—á–∏ –±–ª–æ–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    3. –ü—Ä–µ–¥—Å—Ç–∞–≤—å –¢–û–ü-5 –Ω–æ–≤–æ—Å—Ç–µ–π —Å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ (3-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∫–∞–∂–¥–∞—è)
    4. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ 3 —Ç—Ä–µ–Ω–¥–æ–≤ –Ω–∞–ø–∏—à–∏ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –∞–±–∑–∞—Ü (5-7 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π)
    5. –ó–∞–≤–µ—Ä—à–∏ —Å–∏–ª—å–Ω—ã–º –∑–∞–∫–ª—é—á–µ–Ω–∏–µ–º —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º
    
    –ü–∏—à–∏ –≤ —Å—Ç–∏–ª–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ—Ö–Ω–æ–±–ª–æ–≥–∞ –¥–ª—è IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤.""",
    expected_output="–§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –≤ —Å—Ç–∏–ª–µ —Ç–µ—Ö–Ω–æ–±–ª–æ–≥–∞ —Å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏.",
    agent=ai_evangelist,
    context=[task_deduplicate, task_analyze, task_critique]
)

# Crew V3
test_crew = Crew(
    agents=[deduplication_agent, trend_analyst, critical_analyst, ai_evangelist],
    tasks=[task_deduplicate, task_analyze, task_critique, task_report],
    process=Process.sequential,
    verbose=True
)

if __name__ == "__main__":
    try:
        print("üöÄ –¢–µ—Å—Ç–∏—Ä—É—é V3 —Å –Ω–æ–≤—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏...")
        print("üéØ –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ V3:")
        print("   - AI-–µ–≤–∞–Ω–≥–µ–ª–∏—Å—Ç –¥–ª—è —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è")
        print("   - –¶–µ–ø–æ—á–∫–∞ –º—ã—à–ª–µ–Ω–∏—è –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–µ–Ω–¥–æ–≤")
        print("   - –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ RSS-–ª–µ–Ω—Ç—ã —Å –Ω–∏—à–µ–≤—ã–º–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏")
        print("   - –†–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∫–∞–∂–¥–æ–π –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Ç—Ä–µ–Ω–¥—É")
        print(f"üìä –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: {len(test_articles)} —Å—Ç–∞—Ç–µ–π")
        
        # –ü–µ—Ä–µ–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø–µ—Ä–≤—É—é –∑–∞–¥–∞—á—É
        task_deduplicate.description += f"\n\n–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:\n{json.dumps(test_articles, ensure_ascii=False, indent=2)}"
        
        result = test_crew.kickoff()
        
        print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê V3:")
        print(result)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}") 